{"version":3,"sources":["Flashcard.js","FlashcardList.js","App.js","index.js"],"names":["Flashcard","flashcard","useState","flip","setFlip","height","setHeight","frontEl","useRef","backEl","setMaxHeight","frontHeight","current","getBoundingClientRect","backHeight","Math","max","useEffect","question","answer","options","window","addEventListener","removeEventListener","className","style","onClick","ref","map","option","FlashcardList","flashcards","id","App","setFlashcards","categories","setCategories","categoryEl","amountEl","deocdeString","str","textArea","document","createElement","innerHTML","value","axios","get","then","res","data","trivia_categories","onSubmit","e","preventDefault","params","amount","category","results","questionItem","index","correct_answer","incorrect_answers","a","Date","now","sort","random","htmlFor","name","type","min","step","defaultValue","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.24931693.chunk.js","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\n\r\nexport default function Flashcard({ flashcard }) {\r\n  const [flip, setFlip] = useState(false);\r\n  const [height, setHeight] = useState(\"initial\");\r\n\r\n  /* Create reference to any variable we want that persists through renders */\r\n  const frontEl = useRef();\r\n  /* frontEl.current always points to the current front element */\r\n  const backEl = useRef();\r\n\r\n  /* Calculating Required Height */\r\n  function setMaxHeight() {\r\n    const frontHeight = frontEl.current.getBoundingClientRect().height;\r\n    const backHeight = backEl.current.getBoundingClientRect().height;\r\n    setHeight(Math.max(frontHeight, backHeight, 100));\r\n  }\r\n\r\n  useEffect(setMaxHeight, [\r\n    flashcard.question,\r\n    flashcard.answer,\r\n    flashcard.options,\r\n  ]);\r\n\r\n  /* to trigger height calc on page resize */\r\n  useEffect(() => {\r\n    window.addEventListener(\"resize\", setMaxHeight);\r\n    return () => window.removeEventListener(\"resize\", setMaxHeight);\r\n  });\r\n\r\n  return (\r\n    <div\r\n      className={`card ${flip ? \"flip\" : \"\"}`}\r\n      style={{ height: height }}\r\n      onClick={() => setFlip(!flip)}\r\n    >\r\n      <div className=\"front\" ref={frontEl}>\r\n        {flashcard.question}\r\n        <div className=\"flashcard-options\">\r\n          {flashcard.options.map((option) => {\r\n            return (\r\n              <div key={option} className=\"flashcard-option\">\r\n                {option}\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n      <div className=\"back\" ref={backEl}>\r\n        {flashcard.answer}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\n/*Components*/\r\nimport Flashcard from \"./Flashcard\";\r\n\r\nexport default function FlashcardList({ flashcards }) {\r\n  return (\r\n    <div className=\"card-grid\">\r\n      {flashcards.map((flashcard) => {\r\n        return <Flashcard \r\n        key={flashcard.id}\r\n        flashcard={flashcard} />;\r\n      })}\r\n    </div>\r\n  );\r\n}\r\n","import { useState, useEffect, useRef } from \"react\";\n\n/* Components */\nimport FlashcardList from \"./FlashcardList\";\n\n/* Styles */\nimport \"./app.css\";\n\n/* Axios */\nimport axios from \"axios\";\n\nfunction App() {\n  const [flashcards, setFlashcards] = useState([]);\n  const [categories, setCategories] = useState([]);\n\n  const categoryEl = useRef();\n  const amountEl = useRef();\n\n  useEffect(() => {}, []);\n\n  /* Converts the html encoded characters to string then returns it back */\n\n  function deocdeString(str) {\n    const textArea = document.createElement(\"textarea\");\n    textArea.innerHTML = str;\n    return textArea.value;\n  }\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    axios\n      .get(\"https://opentdb.com/api.php\", {\n        params: {\n          amount: amountEl.current.value,\n          category: categoryEl.current.value,\n        },\n      })\n      .then((res) => {\n        setFlashcards(\n          res.data.results.map((questionItem, index) => {\n            const answer = deocdeString(questionItem.correct_answer);\n            const options = [\n              ...questionItem.incorrect_answers.map((a) => deocdeString(a)),\n              answer,\n            ];\n            return {\n              id: `${index}-${Date.now()}`,\n              question: deocdeString(questionItem.question),\n              answer: answer,\n              options: options.sort(() => Math.random() - 0.5),\n            };\n          })\n        );\n      });\n  }\n\n  /* API CALL FOR GETTING CATEGORIES */\n  useEffect(() => {\n    axios.get(\"https://opentdb.com/api_category.php\").then((res) => {\n      // console.log(res.data);\n      setCategories(res.data.trivia_categories);\n    });\n  }, []);\n\n  return (\n    <>\n      <form className=\"header\" onSubmit={handleSubmit}>\n        <div className=\"form-group\">\n          <label htmlFor=\"category\">Category of Questions</label>\n          <select id=\"category\" ref={categoryEl}>\n            {categories.map((category) => {\n              return (\n                <option value={category.id} key={category.id}>\n                  {category.name}\n                </option>\n              );\n            })}\n          </select>\n        </div>\n        <div className=\"form-group\">\n          <label htmlFor=\"amount\">Number of Questions</label>\n          <input\n            type=\"number\"\n            id=\"amount\"\n            min=\"1\"\n            max=\"50\"\n            step=\"1\"\n            defaultValue={10}\n            ref={amountEl}\n          ></input>\n        </div>\n        <div className=\"form-group\">\n          <button className=\"btn\">Generate</button>\n        </div>\n      </form>\n      <div className=\"container\">\n        <FlashcardList flashcards={flashcards} />\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}